# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  - group: dev
  - name: DOCKER_REPOSITORY
    value: $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(DOCKER_REPOSITORY_NAME)

steps:
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'
  # - script: |
  #     aws ecr get-login-password --region $(AWS_REGION) | docker login --username AWS --password-stdin $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com
  #   displayName: 'Login to AWS'
  #   env:
  #     AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
  #     AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  - task: Docker@2
    displayName: Build docker image
    inputs:
      repository: $(DOCKER_REPOSITORY)
      command: build
      Dockerfile: Dockerfile
      tags: |
        $(Build.BuildNumber)
        latest
        $(Build.BuildId)
  - task: ECRPushImage@1
    inputs:
      awsCredentials: 'kridjsss-aws'
      regionName: 'us-east-2'
      imageSource: 'imagename'
      sourceImageName: $(DOCKER_REPOSITORY)
      sourceImageTag: '$(Build.BuildNumber)'
      repositoryName: 'springboot-demo1'
      pushTag: '$(Build.BuildNumber)'
      autoCreateRepository: true
      outputVariable: 'imageTagOutputVar'